#! /bin/sh

### BEGIN INIT INFO
# Provides:          varnishncsa
# Required-Start:    $local_fs $remote_fs $network varnish
# Required-Stop:     $local_fs $remote_fs $network varnish
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start HTTP accelerator log daemon
# Description:       This script provides logging for varnish
### END INIT INFO

# Source function library
. /lib/lsb/init-functions

NAME=varnishncsa
DESC="HTTP accelerator log deamon"
PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/$NAME
PIDFILE=/run/$NAME/$NAME.pid
LOGFILE=/var/log/varnish/varnishncsa.log
USER=varnishlog
GROUP=varnish
DAEMON_OPTS="-a -w ${LOGFILE} -D -P ${PIDFILE}"

# Include defaults if available
if [ -f /etc/default/$NAME ] ; then
        . /etc/default/$NAME
fi

# If unset, or set to "0" or "no", exit
if [ -z "${VARNISHNCSA_ENABLED}" ] || \
   [ "${VARNISHNCSA_ENABLED}" = "0" ] || \
   [ "${VARNISHNCSA_ENABLED}" = "no" ]; then
  exit 0;
fi

test -x $DAEMON || { echo "${DAEMON} has no execute bit"; exit 0; }

start_varnishncsa() {
    output=$(/bin/tempfile -s.varnish)
    log_daemon_msg "Starting $DESC" "$SERVICE"
    create_pid_directory
    if start-stop-daemon --start --pidfile ${PIDFILE} \
        --chuid $USER --exec ${DAEMON} -- ${DAEMON_OPTS} \
        > ${output} 2>&1; then
	log_end_msg 0
    else
	log_end_msg 1
	cat $output
	exit 1
    fi
    rm $output
}

disabled_varnishncsa() {
    log_daemon_msg "Not starting $DESC" "$SERVICE"
    log_progress_msg "disabled in /etc/default/varnishncsa"
    log_end_msg 0
}

stop_varnishncsa(){
    log_daemon_msg "Stopping $DESC" "$SERVICE"
    if start-stop-daemon --stop --pidfile $PIDFILE \
        --retry 10 --exec $DAEMON; then
	log_end_msg 0
    else
	log_end_msg 1
    fi
}

reload_varnishncsa(){
    log_daemon_msg "Reloading $DESC" "$SERVICE"
    if kill -HUP $(cat $PIDFILE) >/dev/null 2>&1; then
	log_end_msg 0
    else
	log_end_msg 1
	exit 1
    fi
}

status_varnishncsa(){
    status_of_proc -p "${PIDFILE}" "${DAEMON}" "${SERVICE}"
    exit $?
}

create_pid_directory() {
    install -o $USER -g $GROUP -d $(dirname $PIDFILE)
}

case "$1" in
    start)
        case "${VARNISHNCSA_ENABLED:-}" in
            [Yy]es|[Yy]|1|[Tt]|[Tt]rue)
                start_varnishncsa
                ;;
            *)
                disabled_varnishncsa
                ;;
        esac
	;;
    stop)
        stop_varnishncsa
        ;;
    reload)
        reload_varnishncsa
        ;;
    status)
        status_varnishncsa
	;;
    restart|force-reload)
	$0 stop
	$0 start
        ;;
    *)
        log_success_msg "Usage: $0 {start|stop|restart|force-reload|reload}"
        exit 1
        ;;
esac
